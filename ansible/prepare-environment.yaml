- hosts: all
  become: true
  become_user: sysop
  become_method: su
  #vars:
  #  ansible_python_interpreter: "/usr/bin/env python3"

  tasks:
    - name: load kernel modules
      shell: echo {{ item }} | sudo tee -a /etc/modules-load.d/rancher.conf > /dev/null
      with_items:
        - br_netfilter
        - ip6_udp_tunnel
        - ip_set
        - ip_set_hash_ip
        - ip_set_hash_net
        - iptable_filter
        - iptable_nat
        - iptable_mangle
        - iptable_raw
        - nf_conntrack_netlink
        - nf_conntrack
        - nf_conntrack_ipv4
        - nf_defrag_ipv4
        - nf_nat_ipv4
        - nf_nat_masquerade_ipv4
        - nfnetlink
        - udp_tunnel
        - veth
        - vxlan
        - x_tables
        - xt_addrtype
        - xt_conntrack
        - xt_comment
        - xt_mark
        - xt_multiport
        - xt_nat
        - xt_recent
        - xt_set
        - xt_statistic
        - xt_tcpudp
        - macvlan

    - name: Modprobe kernel modules
      shell: sudo modprobe `cat /etc/modules-load.d/rancher.conf | xargs` 

    - name: update sysctl param
      shell: echo {{ item }} | sudo tee -a /etc/sysctl.conf > /dev/null
      with_items:
        - net.bridge.bridge-nf-call-ip6tables = 1
        - net.bridge.bridge-nf-call-iptables = 1
        - net.ipv4.conf.all.forwarding = 1
        - net.ipv4.ip_forward = 1
        - fs.aio-max-nr = 1048576

    - name: sysctl take effect
      shell: sudo sysctl -p

    - name: max opened files
      shell: echo {{ item }} | sudo tee -a /etc/security/limits.conf > /dev/null
      with_items:
        - \* soft nofile 65535
        - \* hard nofile 65535

    - name: Disable swap
      command: sudo swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: start ntpd
      command: "{{ item }}"
      with_items:
       - sudo systemctl start ntpd
       - sudo systemctl enable ntpd

    - name: set timezone
      command: "{{ item }}"
      with_items:
       - sudo timedatectl set-timezone Asia/Shanghai

    - name: stop apparmor
      command: "{{ item }}"
      with_items:
       - sudo systemctl stop apparmor
       - sudo systemctl disable apparmor

    - name: stop SuSEfirewall2
      command: "{{ item }}"
      with_items:
       - sudo systemctl stop SuSEfirewall2
       - sudo systemctl disable SuSEfirewall2

         #- name: install docker
         #  command: "{{ item }}"
         #  with_items:
         #   - zypper ar --gpgcheck-allow-unsigned-repo http://18.223.126.213/REPOSITORY/SLE-Module-Containers12-Updates/ docker-repo
         #   - zypper refresh
         #   - zypper lr
         #   - zypper in -y docker

    - name: Creating docker directory
      shell: sudo mkdir -p /etc/docker

    - name: Custom docker configs
      shell: |
        sudo tee -a /etc/docker/daemon.json > /dev/null <<EOF
        {
            "oom-score-adjust": -1000,
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m",
              "max-file": "3"
            },
            "max-concurrent-downloads": 10,
            "max-concurrent-uploads": 10,
            "insecure-registries": ["0.0.0.0/0"],
            "registry-mirrors": ["https://wbdhknhl.mirror.aliyuncs.com"],
            "storage-driver": "overlay2",
            "storage-opts": [
              "overlay2.override_kernel_check=true"
            ]
        }
        EOF

    - name: docker start
      command: "{{ item }}"
      with_items:
       - sudo systemctl daemon-reload
       - sudo systemctl start docker
       - sudo systemctl enable docker

